{"version":3,"sources":["components/AuthPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AuthPage","useState","email","password","form","setForm","changeHandler","event","target","name","value","console","log","registerHandler","a","axios","post","className","onSubmit","e","preventDefault","type","onChange","htmlFor","onClick","App","users","setUsers","setConnect","useEffect","fetch","then","res","ok","json","jsonR","map","u","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAGe,SAASA,IAGtB,MAAwBC,mBAAS,CAC/BC,MAAO,GACPC,SAAU,KAFZ,mBAAOC,EAAP,KAAaC,EAAb,KAOMC,EAAgB,SAACC,GACrBF,EAAQ,2BAAKD,GAAN,kBAAaG,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SACrDC,QAAQC,IAAIR,IAGRS,EAAe,uCAAG,sBAAAC,EAAA,+EAEdC,IAAMC,KACV,yBADI,eAECZ,IAJa,sDASpBO,QAAQC,IAAR,MAToB,wDAAH,qDA0BrB,OACM,qBAAKK,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACI,oGACA,uBACEA,UAAU,kBACVC,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAFrB,UAIE,sBAAKH,UAAU,MAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,uBACEI,KAAK,QACLZ,KAAK,QACLQ,UAAU,WACVK,SAAUhB,IAEZ,uBAAOiB,QAAQ,QAAf,sBAEF,sBAAKN,UAAU,uBAAf,UACE,uBACEI,KAAK,WACLZ,KAAK,WACLQ,UAAU,WACVK,SAAUhB,IAEZ,uBAAOiB,QAAQ,WAAf,4BAGJ,qBAAKN,UAAU,MAAf,SACE,wBACEA,UAAU,sCACVO,QAASX,EAFX,0FC7CHY,MAxBf,WACE,MAA0BxB,mBAAS,IAAnC,mBAAOyB,EAAP,KAAcC,EAAd,KACA,EAA8B1B,oBAAS,GAAvC,mBAAgB2B,GAAhB,WAaA,OAZAC,qBAAU,WACRC,MAAM,0DACHC,MAAK,SAACC,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,UAGdH,MAAK,SAACI,GACLR,EAASQ,GACTP,GAAW,QAEf,IACK,sBAAKX,UAAU,MAAf,UACL,cAACjB,EAAD,IACC0B,EAAMU,KAAI,SAACC,GAAD,OACX,8BAAiBA,EAAEnC,OAATmC,EAAEC,WCRDC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d32136ab.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function AuthPage() {\r\n  // const history = useHistory();\r\n\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  // const { login } = useContext(AuthContext);\r\n\r\n  const changeHandler = (event: any) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n    console.log(form);\r\n  };\r\n\r\n  const registerHandler = async () => {\r\n    try {\r\n      await axios.post(\r\n        \"/api/auth/registration\",\r\n        { ...form },\r\n        // { headers: { \"Content-Type\": \"aplication/json\" } }\r\n      );\r\n      // history.push(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  // const loginHandler = async () => {\r\n  //   try {\r\n  //     await axios\r\n  //       .post(\r\n  //         \"/api/auth/login\",\r\n  //         { ...form },\r\n  //         { header: { \"Content-Type\": \"aplication/json\" } }\r\n  //       )\r\n  //       // .then((response) => login(response.data.token, response.data.userId));\r\n  //   } catch (err) {\r\n  //     console.log(err);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n        <div className=\"container\">\r\n          <div className=\"auth-page\">\r\n              <h3>Регистрация</h3>\r\n              <form\r\n                className=\"form form-login\"\r\n                onSubmit={(e) => e.preventDefault()}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"input-field col s12 \">\r\n                    <input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      className=\"validate\"\r\n                      onChange={changeHandler}\r\n                    />\r\n                    <label htmlFor=\"email\">Email</label>\r\n                  </div>\r\n                  <div className=\"input-field col s12 \">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      className=\"validate\"\r\n                      onChange={changeHandler}\r\n                    />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <button\r\n                    className=\"wawes-effect wawes-light btn  blue \"\r\n                    onClick={registerHandler}\r\n                  >\r\n                    Регистрация\r\n                  </button>\r\n                </div>\r\n              </form>\r\n          </div>\r\n        </div>\r\n\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport AuthPage from \"./components/AuthPage\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [connect, setConnect] = useState(false);\n  useEffect(() => {\n    fetch(\"https://stormy-peak-20800.herokuapp.com/api/auth/users\")\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then((jsonR) => {\n        setUsers(jsonR);\n        setConnect(true);\n      });\n  },[]);\n  return <div className=\"App\">\n    <AuthPage/>\n    {users.map((u:any) => \n    <div key={u.id}>{u.email}</div>\n    )}\n    \n    </div>;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}